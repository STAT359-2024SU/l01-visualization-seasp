---
title: "L01 Visualization"
subtitle: "Foundations of Data Science with R (STAT 359)"
author: "Noor Syafira Shih"
format:
  html:
    toc: true
    embed-resources: true
    link-external-newwindow: true

execute:
  warning: false

from: markdown+emoji 
---

::: {.callout-tip icon=false}

## Github Repo Link

[https://github.com/STAT359-2024SU/l01-visualization-seasp](https://github.com/STAT359-2024SU/l01-visualization-seasp)

:::

::: callout-warning
Make sure your solutions are clearly indicated and that your document is neatly formatted. 
:::

## Overview

The goal of this lab is to start building the skills to explore data through visualization using the `ggplot2` package in R (member of the `tidyverse`). Students will also learn to access and utilize R documentation.

## Load packages

You should always begin by loading all necessary packages towards the beginning of your document.

```{r}
#| label: load-pkgs

# Loading package(s)
library(tidyverse)
```


## Datasets 

This lab utilizes the `mpg` and `diamonds` datasets. Both come with `ggplot2` and their documentation/codebooks can be accessed with `?mpg` and `?diamonds`, provided you have installed and loaded `ggplot2` to your current R session. The case study utilizes `tinder_data.csv` located in your `data` folder. The following line of code reads in the data.

```{r}
#| label: load-data

# read in data
tinder_data <- read_csv("data/tinder_data.csv")
```


## Exercises

### Exercise 1 

There are 3 particularly important components to our template for building a graphic with `ggplot2`. They are `<DATA>`, `<GEOM_FUNCTION>`, and `<MAPPINGS>`. The importance of `<DATA>` is obvious. `<GEOM_FUNCTION>` is referring to the selection of a **geom**. `<MAPPINGS>`, specifically `aes(<MAPPINGS>)`, is referring to the process of defining **aesthetic mappings**.

* What is a **geom**?
* What is an **aesthetic mapping**?


::: {.callout-tip icon="false"}
## Solution

- A geom is an object that represents the data in a plot, and there are several types (such as bar, line, and point geoms defined by functions such as geom_bar())
- Aesthetic mapping relates dataset variables to how they are represented visually in the plot, and defined using the aes() function

:::

### Exercise 2

Construct a scatterplot of `hwy` versus `cty` using the `mpg` dataset. What is the problem with this plot? How could you improve it?

::: {.callout-tip icon="false"}
## Solution

```{r}
ggplot(
  data = mpg,
  mapping = aes(x = hwy, y = cty)
) +
  geom_point()
```

A problem with this plot is that it doesn't show any trends based on other factors in the dataset such as drv. Instead, it is just an unlabeled plot of hwy vs cty, with no additional information of what the points themselves represent, and so the interpretation of this visualization is unclear.
:::



### Exercise 3

Construct a scatterplot of `hwy` versus `cty`. Set the color of the points to `drv`.

Now construct a scatterplot of `hwy` versus `cty`. Set the color of the points to your favorite color (try typing `colors()` in the console) and `facet` by `drv`. Read `?facet_wrap` and adjust the `ncol` and `scales` as necessary.

::: {.callout-tip icon="false"}
## Solution

3a)
```{r}
ggplot(
  data = mpg,
  mapping = aes(x = hwy, y = cty, color = drv)
) +
  geom_point()

```
3b)
```{r}
ggplot(
  data = mpg,
  mapping = aes(x = hwy, y = cty)
) +
  geom_point(color = "turquoise") +
  facet_wrap(~drv)
```

:::

What are the advantages to using faceting instead of the color aesthetic? What are the disadvantages? How might the balance change if you had a larger dataset?

::: {.callout-tip icon="false"}
## Solution

3c) Faceting can be more beneficial in comparison to changing the colour aesthetic in that it allows the data to be separated more clearly into separate subplots and trends within each group may be more visible in that way. However, it also has some disadvantages in that it is less concise and could make it more difficult to compare between the different groups (than if the colour aesthetic is just modified instead). For larger datasets, faceting may become even more beneficial in comparison, so that the trends do not get lost in the higher volume of data points visualized in the scatter plots here.

:::

### Exercise 4

Construct a scatterplot of `hwy` vs `cty`. Next, map a third numerical variable to `color`, then `size`, then `shape`. 

::: {.callout-tip icon="false"}
## Solution

Mapping third variable to color:
```{r}

ggplot(
  data = mpg,
  mapping = aes(x = hwy, y = cty)
) +
  geom_point(aes(color = cyl))

```

Mapping third variable to size:

```{r}
ggplot(
  data = mpg,
  mapping = aes(x = hwy, y = cty)
) +
  geom_point(aes(size = cyl))
```


Mapping third variable to shape:
```{r}
ggplot(
  data = mpg,
  mapping = aes(x = hwy, y = cty)
) +
  geom_point(aes(shape = class))
```


:::

How do the aesthetics behave differently for categorical versus numerical variables? In other words, which variable types (numeric/categorical) are appropriate to match to which aesthetics (size/shape/color)?

::: {.callout-tip icon="false"}
## Solution

Numerical variables work for color and size, but not for shape, while categorical variables work for color, size, and shape. This makes sense because for shape, there is no quantifiable scale, and so it can't be adjusted continuously along with the numerical variable data.

:::

### Exercise 5

Construct a histogram of the `carat` variable in the `diamonds` dataset. Adjust the `bins` to an appropriate value. Add a `title`, remove the axis label that says `count`, and add a `caption`: "Source: ggplot2 package".

::: {.callout-tip icon="false"}
## Solution

```{r}
ggplot(
  data = diamonds, 
  mapping = aes(x = carat)) +
  geom_histogram(binwidth = 0.25) +
  labs(
    title = "Carat Histogram",
    y = "",
    caption = "Source: ggplot2 package"
  )
```


:::

### Exercise 6

Construct 2 appropriate graphics to show the relationship between `carat` and `cut`. 

::: {.callout-tip icon="false"}
## Solution
6a)
```{r}
ggplot(
  data = diamonds, 
  mapping = aes(x = cut, y = carat)) +
  geom_point() +
  labs(title = "Carat Relationship with Cut Type",
       x = "Cut Type", y = "Carat")
```


6b)
```{r}
ggplot(
  data = diamonds,
  mapping = aes(x = cut, y = carat)
) +
  geom_boxplot() +
  labs(title = "Carat Relationship with Cut Type",
       x = "Cut Type", y = "Carat")
```


:::

### Exercise 7

Construct a barplot of `cut`. Add in `aes(fill = carat > 0.7)`.


::: {.callout-tip icon="false"}
## Solution

```{r}
ggplot(
  data = diamonds, 
  mapping = aes(x = cut, fill = carat > 0.7)) +
  geom_bar() +
  labs(title = "Diamonds Cut Distribution",
       x = "Cut", y = "Count",
       fill = "Carat > 0.7 Condition")
```
:::

### Exercise 8

When would you use `facet_grid()` versus `facet_wrap()`? When using `facet_grid()` it is suggested that you put the variable with more unique levels in the columns. Why do you think that this practice is suggested?

::: {.callout-tip icon="false"}
## Solution
facet_wrap() seems to be better suited to cases where there is only one variable that determines the faceting, while facet_grid() seems to be better for multiple variable faceting. Placing the more unique level variable in the columns for facet_grid() makes sense because it may be more readable as a visual representation to have the smaller/broader categories on the rows and scrolling through the columns in each row to compare that way.
:::


## Case Study

Congratulations, you just landed your first job as a data analyst for Tinder! The dataset is stored in the `data` folder called `tinder_data`. A codebook, `tinder_data_codebook.csv`, provides a description of each of the variable names. This has been read in for you at the top of the document. We will learn more about importing data later in the quarter.

**Your first assignment is to determine if there is a relationship between messages sent and messages received and how this differs based on user gender.** Your boss has asked for a one paragraph summary with graphics to support your conclusions. Your boss wants all graphics *saved* into a folder named "plots". Hint: `ggsave()`.

Since this is your first project as a data analyst you have been provided some tips and considerations for getting started:

 - When approaching a research question it is important to use univariate, bivariate, and multivariate analysis (depending on the problem) to get a better understanding of your data and also identify any potential problems.
 - How might the distribution of your variables impact your conclusions? Outliers? Weird values? Imbalanced classes?
 - How might `coord_fixed()` and `geom_abline()` improve a graphic?
 - Feel free to be creative! It is your job to answer this question and interpret conclusions in the most appropriate ways you see fit.

This dataset was provided by [Swipestats.io](https://www.swipestats.io/).

::: {.callout-tip icon="false"}
## Solution

```{r}
ggplot(
  data = tinder_data, 
  mapping = aes(x = messages_sent, y = messages_received, color = user_gender)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
  geom_smooth(method = "lm") + 
  coord_fixed() +
  labs(title = "Messages Sent vs Messages Received by Gender",
       subtitle = "Dashed Line indicates equal amounts of messages sent and receives", 
       x = "Messages Sent", y = "Messages Received")

dir.create("plots")
ggsave("plots/tinder_case_study_plot.png")
```

Based on the distribution of messages sent and received by gender, it appears that women tend to have a higher proportion of messages received compared to the amount they send (a proportion higher than 1, based on the line of best fit), while men tend to have a lower proportion of messages received compared to the amount they send (a proportion lower than 1, based on the line of best fit). The distribution of the variables may impact the conclusions in terms of causing skewing with the averages, but this would be visible in a scatter plot such as the one displayed here, since the full range of the data is shown. From this, outliers can be seen and addressed as well so that they do not disproportionately influence the conclusions. coord_fixed() is helpful for this graphic because it equalizes the scale between the x and y axes, which helps for a comparison where the x and y variables are the same unit and the proportions between the two are being observed. geom(abline) is helpful by providing a center line where the proportion of messages sent and received is 1, so that the trends for both men and women in this study can be compared based on whether they are higher or lower than this reference line.

:::

## Graduate Challenge

::: callout-important
Graduate students are required to complete this challenge. **It is optional for undergraduate students.**
:::

Recreate the following graphic:

- alpha = 0.25
- theme is with Google Docs Chart from [ggthemes package](https://jrnold.github.io/ggthemes/reference/index.html).

Why might your graph not match the example exactly? What could we do to ensure our graphs were identical?

::: {.callout-tip icon="false"}
## Solution

```{r}
ggplot(
  data = mpg, 
  mapping = aes(x = hwy, y = class)) +
  geom_boxplot() +
  geom_jitter(alpha = 0.25)+
  labs(y = "Vehicle Class", x = "Highway MPG")
```

The boxplots part of the graph follows the intended graph closely, but there are some areas of difference (such as the background colour and other formatting aspects that do not match perfectly). To make sure the graphs are identical, I could go through the ggthemes package to ensure that the same formatting tools are used here.
:::
